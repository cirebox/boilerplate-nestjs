name: 'Terraform CI/CD'

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Ambiente para deploy (dev, staging, prod)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod
      action:
        description: 'Ação a ser executada'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy

env:
  TF_VERSION: '1.7.0'
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
  GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
  TF_IN_AUTOMATION: 'true'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false

      - name: Determinar ambiente
        id: set-environment
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
            echo "ACTION=${{ github.event.inputs.action }}" >> $GITHUB_ENV
          else
            if [ "${{ github.ref }}" == "refs/heads/main" ]; then
              echo "ENVIRONMENT=prod" >> $GITHUB_ENV
            elif [ "${{ github.ref }}" == "refs/heads/develop" ]; then
              echo "ENVIRONMENT=staging" >> $GITHUB_ENV
            else
              echo "ENVIRONMENT=dev" >> $GITHUB_ENV
            fi
            echo "ACTION=plan" >> $GITHUB_ENV
          fi

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Terraform Lint
        id: lint
        uses: terraform-linters/tflint-bundle@v1
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: |
          # Configuração condicional do backend conforme ambiente
          case $ENVIRONMENT in
            dev)
              BACKEND_CONFIG="-backend-config=bucket=boilerplate-nestjs-terraform-state-dev"
              ;;
            staging)
              BACKEND_CONFIG="-backend-config=bucket=boilerplate-nestjs-terraform-state-staging"
              ;;
            prod)
              BACKEND_CONFIG="-backend-config=bucket=boilerplate-nestjs-terraform-state-prod"
              ;;
          esac
          
          terraform init $BACKEND_CONFIG -backend-config=key=${ENVIRONMENT}/terraform.tfstate

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Security Scan
        id: tfsec
        uses: aquasecurity/tfsec-sarif-action@v0.1.4
        with:
          working_directory: ./terraform
          sarif_file: tfsec.sarif
        continue-on-error: true

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: tfsec.sarif
          category: tfsec
        if: always()

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -var="environment=${{ env.ENVIRONMENT }}" -out=tfplan
        continue-on-error: true

      - name: Terraform Cost Estimation
        id: infracost
        uses: infracost/infracost-action@v2
        with:
          path: ./terraform
          terraform_plan_flags: -var="environment=${{ env.ENVIRONMENT }}"
        env:
          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}
        if: github.event_name == 'pull_request'
        continue-on-error: true

      - name: Terraform Apply
        if: env.ACTION == 'apply' && (github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main')
        run: terraform apply -auto-approve tfplan
        
      - name: Terraform Destroy
        if: env.ACTION == 'destroy' && github.event_name == 'workflow_dispatch'
        run: terraform destroy -auto-approve -var="environment=${{ env.ENVIRONMENT }}"

      - name: Upload Terraform Plan
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan-${{ env.ENVIRONMENT }}
          path: ./terraform/tfplan
          retention-days: 5

